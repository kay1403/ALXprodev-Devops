#!/bin/bash

# Create output directory
mkdir -p pokemon_data

# Pokémon list
pokemon_list=(bulbasaur ivysaur venusaur charmander charmeleon)

# Array to hold background process IDs (PIDs)
pids=()

# Function to fetch Pokémon data
fetch_pokemon() {
  name=$1
  echo "Fetching data for $name..."
  response=$(curl -s -w "%{http_code}" -o "pokemon_data/${name}.json" "https://pokeapi.co/api/v2/pokemon/$name")

  if [[ "$response" -eq 200 ]]; then
    echo "Saved data to pokemon_data/${name}.json ✅"
  else
    echo "[$(date)] Failed to fetch data for $name (status $response)" >> errors.txt
    rm -f "pokemon_data/${name}.json"
  fi
}

# Launch fetch jobs in background and store their PIDs
for name in "${pokemon_list[@]}"; do
  fetch_pokemon "$name" &
  pid=$!
  pids+=($pid)
done

# Show active jobs
echo "Background jobs running:"
jobs

# Optionally kill a background process (for demo: kill the first one if needed)
# Comment out this part if not needed in production
if [[ ${#pids[@]} -gt 0 ]]; then
  echo "Killing first job with PID ${pids[0]}..."
  kill "${pids[0]}"
  echo "Process ${pids[0]} killed."
fi

# Wait for all other jobs to complete
wait

echo "✅ All remaining Pokémon data has been fetched."
